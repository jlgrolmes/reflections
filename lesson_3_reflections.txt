When would you want to use a remote repository rather than keeping all your work local?

A remote repository enables me to create a collaborative project across a network.  Each collaborator can work locally and synchronize their work with the master project.  Every one can be connected to latest versions of master and branches.  This allows folks to 

Describe the differences between forks, clones, and branches. When would you use one instead of another?

Forks allow someone to create a copy of the repository on GitHub in their account.
Forks preserve the links back to the original repository.

Clones allow someone to create copies of a repository either from GitHub to Local computer, or from GitHub to GitHub, or from Local to Local.

Branches are created on a working repository (either on GitHub or Local).

What is the benefit of having a copy of the last known state of the remote stored locally?

You can make changes locally on your local version of the master branch.
You can even merge your changes with the last know state of origin/master.
When you push your master branch back to origin it should able to update via a Fast-Forward Merge.

How would you collaborate without using Git or GitHub? What would be easier, and what would be harder?

I am now learning how to collaborate with MS Teams and MS Office365 tools.  These tools have similar collaboration features to Git and GitHub.  These tools work well for collaboration on documents, spreadsheets, and presentations.  I do plan to use Git and GitHub for collaboration on Python model development and use.
